name: Deploy to AWS

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Configure AWS CLI
      - name: Configure AWS CLI
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region $AWS_REGION

      # Log in to Amazon ECR
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URI }}

      # Download certs
      - name: Download certs
        run: |
          mkdir -p certs
          echo "${{ secrets.CERT_FILE }}" > certs/us-east-1-bundle.pem

      # Build and push Docker image
      - name: Build and push Docker image
        run: |
          IMAGE_TAG=$(git rev-parse --short HEAD)
          docker build -t portfolio:${IMAGE_TAG} .
          docker tag portfolio:${IMAGE_TAG} ${{ secrets.ECR_REPOSITORY_URI }}:${IMAGE_TAG}
          docker push ${{ secrets.ECR_REPOSITORY_URI }}:${IMAGE_TAG}

      # Register ECS Task Definition (update with new image)
      - name: Register ECS Task Definition
        run: |
          IMAGE_TAG=$(git rev-parse --short HEAD)
          aws ecs register-task-definition \
            --family portfolio-backend-task \
            --container-definitions "[{
              \"name\": \"portfolio\",
              \"image\": \"${{ secrets.ECR_REPOSITORY_URI }}:${IMAGE_TAG}\",
              \"memory\": 2048,
              \"cpu\": 1024,
              \"portMappings\": [
                {\"containerPort\": 5000, \"hostPort\": 0, \"protocol\": \"tcp\"}
              ],
              \"environment\": [
                {\"name\": \"DB_HOST\", \"value\": \"${{ secrets.RDS_HOST }}\"},
                {\"name\": \"DB_PORT\", \"value\": \"${{ secrets.RDS_PORT }}\"},
                {\"name\": \"DB_USER\", \"value\": \"${{ secrets.RDS_USER }}\"},
                {\"name\": \"DB_PASSWORD\", \"value\": \"${{ secrets.RDS_PASSWORD }}\"},
                {\"name\": \"DB_DATABASE\", \"value\": \"${{ secrets.RDS_DATABASE }}\"}
              ]
            }]"

      # Update ECS Service to use the new task definition revision
      - name: Update ECS Service
        run: |
          IMAGE_TAG=$(git rev-parse --short HEAD)
          TASK_REVISION=$(aws ecs describe-task-definition --task-definition portfolio-backend-task | jq -r '.taskDefinition.revision')
          aws ecs update-service \
            --cluster portfolio \
            --service portfolio-service \
            --force-new-deployment \
            --task-definition portfolio-backend-task:${TASK_REVISION}
